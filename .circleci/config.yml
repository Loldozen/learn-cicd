# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs

commands: # a reusable command with parameters
  print_pipeline_id:
    parameters:
      to:
        default: "Workflow ID should be here"
        type: string
    steps:
      - run: echo "Workflow ID <<parameters.to>>"

jobs:
  # print-env-variable:
  #   docker:
  #     - image: cimg/base:stable
  #   steps:
  #     - run:
  #         name: "Print my name"
  #         command: "echo ${Name}"
  save_hello_world_output:
    docker: 
      - image: cimg/base:stable
    steps: 
      - run:
          name: "Create workspace directory"
          command: cd ~/ && mkdir workspace
      - run:
          name: Print hello world
          command: echo "Hello World" > ~/workspace/output.txt
      - persist_to_workspace:
          root: ~/workspace
          paths:
            - output.txt
  print_output_file:
    docker: 
      - image: cimg/base:stable
    steps:
      - attach_workspace:
          at: ~/workspace
      - run:
          name: "print output file"
          command:  cat ~/workspace/output.txt

  use_commands:
    docker:
      - image: cimg/base:stable
    steps:
      - print_pipeline_id:
          to: $CIRCLE_WORKFLOW_ID
  
  test_failure:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run: exit 1
      - run: 
          name: "On failure" 
          command: echo "AN ERROR OCCURED"
          when: on_fail

  # say-hello:
  #   # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
  #   # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
  #   docker:
  #     - image: cimg/base:stable
  #   # Add steps to the job
  #   # See: https://circleci.com/docs/2.0/configuration-reference/#steps
  #   steps:
  #     - checkout
  #     - run:
  #         name: "Say hello"
  #         command: "echo Hello, World!"
  # print-hello:
  #   docker:
  #     - image: cimg/base:stable
  #   steps:
  #     - checkout
  #     - run:
  #         name: "print hello"
  #         command: "echo Hello"
  # print-world:
  #   docker:
  #     - image: cimg/base:stable
  #   steps: 
  #     - checkout
  #     - run:
  #         name: "print world again"
  #         command: "echo World again" 

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  print-name-workflow:
    jobs:
      - use_commands
      - save_hello_world_output
      - print_output_file:
          requires: 
            - save_hello_world_output
      - test_failure
      
      # - print-env-variable  
      # - say-hello
      # - print-hello
      # - print-world
